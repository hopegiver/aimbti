{
  "version": 3,
  "sources": ["../src/aimbti.js", "../src/ui/styles.js", "../src/ui/components.js", "../src/services/questions.js", "../src/services/results.js", "../src/services/auth.js", "../src/services/session.js", "../src/services/storage.js"],
  "sourcesContent": ["// AIMBTI Main Application\nimport { styles } from './ui/styles.js';\nimport { UIComponents } from './ui/components.js';\nimport { QuestionService } from './services/questions.js';\nimport { ResultService } from './services/results.js';\nimport { AuthService } from './services/auth.js';\nimport { SessionService } from './services/session.js';\nimport { StorageService } from './services/storage.js';\n\nexport class AIMBTI {\n    constructor(containerId, options = {}) {\n        this.containerId = containerId;\n        this.container = null;\n        this.ui = null;\n        this.questionService = new QuestionService();\n        this.resultService = new ResultService();\n\n        // \uC778\uC99D \uC124\uC815\n        this.apiKey = options.apiKey;\n        this.authService = null;\n        this.isAuthenticated = false;\n\n        // \uC0AC\uC6A9\uC790 \uC138\uC158 \uC124\uC815\n        this.userToken = options.userToken || null;\n        this.userId = options.userId || null;\n        this.sessionService = null;\n        this.storageService = null;\n\n        // \uACB0\uACFC \uC800\uC7A5 \uC124\uC815\n        this.saveResults = options.saveResults !== false; // \uAE30\uBCF8\uAC12 true\n        this.onComplete = options.onComplete || null;\n        this.onSave = options.onSave || null;\n\n        this.currentQuestion = 0;\n        this.answers = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };\n        this.selectedOption = null;\n    }\n\n    async init() {\n        // \uC778\uC99D \uCC98\uB9AC\n        if (this.apiKey) {\n            try {\n                this.authService = new AuthService(this.apiKey);\n                await this.authService.authenticate();\n                this.isAuthenticated = true;\n            } catch (error) {\n                this.showError('\uC778\uC99D \uC2E4\uD328', error.message);\n                return;\n            }\n        }\n\n        // \uC138\uC158 \uC2DC\uC791 (userToken\uC774 \uC788\uB294 \uACBD\uC6B0)\n        if (this.userToken && this.apiKey) {\n            try {\n                this.sessionService = new SessionService(this.apiKey, this.userToken, {\n                    userId: this.userId\n                });\n                await this.sessionService.startSession();\n\n                // Storage \uC11C\uBE44\uC2A4 \uCD08\uAE30\uD654\n                this.storageService = new StorageService(this.apiKey);\n            } catch (error) {\n                console.warn('\uC138\uC158 \uC2DC\uC791 \uC2E4\uD328:', error);\n                // \uC138\uC158 \uC2E4\uD328\uD574\uB3C4 \uD14C\uC2A4\uD2B8\uB294 \uC9C4\uD589\n            }\n        }\n\n        // Inject styles\n        this.injectStyles();\n\n        // Get container\n        this.container = document.getElementById(this.containerId);\n        if (!this.container) {\n            console.error(`Container with id \"${this.containerId}\" not found`);\n            return;\n        }\n\n        // Add aimbti-container class\n        this.container.classList.add('aimbti-container');\n\n        // Initialize UI\n        this.ui = new UIComponents(this.container);\n        this.ui.render();\n\n        // Attach event listeners\n        this.attachEventListeners();\n    }\n\n    injectStyles() {\n        const styleId = 'aimbti-styles';\n\n        // Check if styles already exist\n        if (document.getElementById(styleId)) {\n            return;\n        }\n\n        const styleElement = document.createElement('style');\n        styleElement.id = styleId;\n        styleElement.textContent = styles;\n        document.head.appendChild(styleElement);\n    }\n\n    attachEventListeners() {\n        // Start button\n        const startButton = this.container.querySelector('#aimbti-start-button');\n        startButton.addEventListener('click', () => this.startTest());\n\n        // Restart button\n        const restartButton = this.container.querySelector('#aimbti-restart-button');\n        restartButton.addEventListener('click', () => this.restartTest());\n    }\n\n    startTest() {\n        this.ui.showScreen('aimbti-question-screen');\n        this.showQuestion();\n    }\n\n    showQuestion() {\n        const question = this.questionService.getQuestion(this.currentQuestion);\n        this.ui.renderQuestion(question);\n        this.ui.updateProgress(this.currentQuestion, this.questionService.getTotalQuestions());\n\n        // Attach option click listeners\n        const options = this.container.querySelectorAll('.aimbti-option');\n        options.forEach(option => {\n            option.addEventListener('click', (e) => {\n                this.selectOption(e.currentTarget);\n            });\n        });\n\n        this.selectedOption = null;\n    }\n\n    selectOption(optionElement) {\n        // Remove previous selection\n        const options = this.container.querySelectorAll('.aimbti-option');\n        options.forEach(opt => opt.classList.remove('selected'));\n\n        // Add selection\n        optionElement.classList.add('selected');\n\n        const type = optionElement.dataset.type;\n        this.selectedOption = type;\n\n        // Auto-advance after 500ms\n        setTimeout(() => {\n            this.nextQuestion();\n        }, 500);\n    }\n\n    nextQuestion() {\n        if (this.selectedOption === null) return;\n\n        this.answers[this.selectedOption]++;\n        this.currentQuestion++;\n\n        if (this.currentQuestion < this.questionService.getTotalQuestions()) {\n            this.showQuestion();\n        } else {\n            this.showResult();\n        }\n    }\n\n    async showResult() {\n        const { type, result } = this.resultService.calculateResult(this.answers);\n\n        // \uACB0\uACFC \uC800\uC7A5\n        if (this.saveResults && this.storageService && this.sessionService) {\n            try {\n                const sessionId = this.sessionService.getSessionId();\n                const saveResponse = await this.storageService.saveResult(\n                    sessionId,\n                    this.userToken,\n                    { type, result },\n                    this.answers\n                );\n\n                // \uC800\uC7A5 \uCF5C\uBC31 \uD638\uCD9C\n                if (this.onSave && typeof this.onSave === 'function') {\n                    this.onSave(saveResponse.data);\n                }\n\n                console.log('\u2713 \uACB0\uACFC \uC800\uC7A5 \uC644\uB8CC:', saveResponse.data.resultId);\n            } catch (error) {\n                console.error('\uACB0\uACFC \uC800\uC7A5 \uC2E4\uD328:', error);\n                // \uC800\uC7A5 \uC2E4\uD328\uD574\uB3C4 \uACB0\uACFC\uB294 \uD45C\uC2DC\n            }\n        }\n\n        this.ui.showScreen('aimbti-result-screen');\n        this.ui.renderResult(type, result);\n\n        // \uC644\uB8CC \uCF5C\uBC31 \uD638\uCD9C\n        if (this.onComplete && typeof this.onComplete === 'function') {\n            this.onComplete({ type, result, answers: this.answers });\n        }\n    }\n\n    restartTest() {\n        this.currentQuestion = 0;\n        this.answers = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };\n        this.selectedOption = null;\n\n        this.ui.showScreen('aimbti-start-screen');\n    }\n\n    showError(title, message) {\n        const container = document.getElementById(this.containerId);\n        if (!container) return;\n\n        container.innerHTML = `\n            <div class=\"aimbti-container\">\n                <div class=\"aimbti-card\">\n                    <h1 class=\"aimbti-title\" style=\"color: #dc3545;\">\u26A0\uFE0F ${title}</h1>\n                    <div class=\"aimbti-intro-text\" style=\"color: #dc3545;\">\n                        ${message}\n                    </div>\n                </div>\n            </div>\n        `;\n\n        // Inject styles for error display\n        this.injectStyles();\n    }\n}\n\n// Global initialization function\nwindow.initAIMBTI = function(containerId, options) {\n    const app = new AIMBTI(containerId, options);\n    app.init();\n    return app;\n};\n", "// UI Styles\nexport const styles = `\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    .aimbti-container {\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        min-height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n    }\n\n    .aimbti-card {\n        background: white;\n        border-radius: 20px;\n        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n        max-width: 800px;\n        width: 100%;\n        padding: 40px;\n        animation: aimbti-fadeIn 0.5s ease-in;\n    }\n\n    @keyframes aimbti-fadeIn {\n        from {\n            opacity: 0;\n            transform: translateY(20px);\n        }\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    .aimbti-title {\n        color: #667eea;\n        text-align: center;\n        margin-bottom: 10px;\n        font-size: 2.5em;\n    }\n\n    .aimbti-subtitle {\n        text-align: center;\n        color: #666;\n        margin-bottom: 30px;\n        font-size: 1.1em;\n    }\n\n    .aimbti-screen {\n        display: none;\n    }\n\n    .aimbti-screen.active {\n        display: block;\n        animation: aimbti-fadeIn 0.5s ease-in;\n    }\n\n    .aimbti-button {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        border: none;\n        padding: 15px 40px;\n        font-size: 1.1em;\n        border-radius: 50px;\n        cursor: pointer;\n        transition: transform 0.2s, box-shadow 0.2s;\n        display: block;\n        margin: 30px auto;\n    }\n\n    .aimbti-button:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 10px 20px rgba(102, 126, 234, 0.4);\n    }\n\n    .aimbti-progress-bar {\n        background: #e0e0e0;\n        height: 8px;\n        border-radius: 10px;\n        margin-bottom: 30px;\n        overflow: hidden;\n    }\n\n    .aimbti-progress-fill {\n        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\n        height: 100%;\n        width: 0%;\n        transition: width 0.3s ease;\n    }\n\n    .aimbti-question-container {\n        margin: 30px 0;\n    }\n\n    .aimbti-question-text {\n        font-size: 1.3em;\n        color: #333;\n        margin-bottom: 25px;\n        text-align: center;\n        font-weight: 500;\n    }\n\n    .aimbti-options {\n        display: flex;\n        flex-direction: column;\n        gap: 15px;\n    }\n\n    .aimbti-option {\n        background: #f5f5f5;\n        border: 2px solid transparent;\n        padding: 20px;\n        border-radius: 15px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        font-size: 1.05em;\n        text-align: center;\n    }\n\n    .aimbti-option:hover {\n        background: #e8e8ff;\n        border-color: #667eea;\n        transform: translateX(5px);\n    }\n\n    .aimbti-option.selected {\n        background: #667eea;\n        color: white;\n        border-color: #667eea;\n    }\n\n    .aimbti-result-card {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        padding: 30px;\n        border-radius: 20px;\n        margin: 20px 0;\n        text-align: center;\n    }\n\n    .aimbti-result-type {\n        font-size: 3em;\n        font-weight: bold;\n        margin: 20px 0;\n        letter-spacing: 5px;\n    }\n\n    .aimbti-result-title {\n        font-size: 1.8em;\n        margin-bottom: 15px;\n    }\n\n    .aimbti-result-description {\n        font-size: 1.1em;\n        line-height: 1.6;\n        opacity: 0.95;\n    }\n\n    .aimbti-characteristics {\n        background: #f9f9f9;\n        padding: 25px;\n        border-radius: 15px;\n        margin: 20px 0;\n    }\n\n    .aimbti-characteristics h3 {\n        color: #667eea;\n        margin-bottom: 15px;\n        font-size: 1.5em;\n    }\n\n    .aimbti-characteristics ul {\n        list-style: none;\n        padding-left: 0;\n    }\n\n    .aimbti-characteristics li {\n        padding: 10px 0;\n        color: #555;\n        font-size: 1.05em;\n        border-bottom: 1px solid #e0e0e0;\n    }\n\n    .aimbti-characteristics li:last-child {\n        border-bottom: none;\n    }\n\n    .aimbti-characteristics li::before {\n        content: \"\u2713 \";\n        color: #667eea;\n        font-weight: bold;\n        margin-right: 10px;\n    }\n\n    .aimbti-intro-text {\n        text-align: center;\n        color: #555;\n        line-height: 1.8;\n        margin: 20px 0;\n        font-size: 1.1em;\n    }\n\n    @media (max-width: 600px) {\n        .aimbti-card {\n            padding: 20px;\n        }\n\n        .aimbti-title {\n            font-size: 2em;\n        }\n\n        .aimbti-question-text {\n            font-size: 1.1em;\n        }\n\n        .aimbti-result-type {\n            font-size: 2em;\n        }\n    }\n`;\n", "// UI Components\nexport class UIComponents {\n    constructor(container) {\n        this.container = container;\n    }\n\n    createStartScreen() {\n        return `\n            <div class=\"aimbti-screen active\" id=\"aimbti-start-screen\">\n                <p class=\"aimbti-intro-text\">\n                    MBTI\uB294 \uC138\uACC4\uC5D0\uC11C \uAC00\uC7A5 \uB110\uB9AC \uC0AC\uC6A9\uB418\uB294 \uC131\uACA9 \uC720\uD615 \uAC80\uC0AC\uC785\uB2C8\uB2E4.<br>\n                    12\uAC1C\uC758 \uC9C8\uBB38\uC744 \uD1B5\uD574 \uB2F9\uC2E0\uC758 \uC131\uACA9 \uC720\uD615\uC744 \uC54C\uC544\uBCF4\uC138\uC694!<br><br>\n                    \uAC01 \uC9C8\uBB38\uC5D0 \uC194\uC9C1\uD558\uAC8C \uB2F5\uBCC0\uD574 \uC8FC\uC138\uC694.\n                </p>\n                <button class=\"aimbti-button\" id=\"aimbti-start-button\">\uD14C\uC2A4\uD2B8 \uC2DC\uC791\uD558\uAE30</button>\n            </div>\n        `;\n    }\n\n    createQuestionScreen() {\n        return `\n            <div class=\"aimbti-screen\" id=\"aimbti-question-screen\">\n                <div class=\"aimbti-progress-bar\">\n                    <div class=\"aimbti-progress-fill\" id=\"aimbti-progress-bar\"></div>\n                </div>\n                <div class=\"aimbti-question-container\">\n                    <p class=\"aimbti-question-text\" id=\"aimbti-question-text\"></p>\n                    <div class=\"aimbti-options\" id=\"aimbti-options\"></div>\n                </div>\n            </div>\n        `;\n    }\n\n    createResultScreen() {\n        return `\n            <div class=\"aimbti-screen\" id=\"aimbti-result-screen\">\n                <div class=\"aimbti-result-card\">\n                    <div class=\"aimbti-result-type\" id=\"aimbti-result-type\"></div>\n                    <div class=\"aimbti-result-title\" id=\"aimbti-result-title\"></div>\n                    <div class=\"aimbti-result-description\" id=\"aimbti-result-description\"></div>\n                </div>\n                <div class=\"aimbti-characteristics\">\n                    <h3>\uC8FC\uC694 \uD2B9\uC9D5</h3>\n                    <ul id=\"aimbti-characteristics-list\"></ul>\n                </div>\n                <button class=\"aimbti-button\" id=\"aimbti-restart-button\">\uB2E4\uC2DC \uD14C\uC2A4\uD2B8\uD558\uAE30</button>\n            </div>\n        `;\n    }\n\n    render() {\n        this.container.innerHTML = `\n            <div class=\"aimbti-card\">\n                <h1 class=\"aimbti-title\">\uD83E\uDDE0 MBTI \uC131\uACA9 \uC720\uD615 \uD14C\uC2A4\uD2B8</h1>\n                <p class=\"aimbti-subtitle\">\uB098\uB294 \uC5B4\uB5A4 \uC720\uD615\uC77C\uAE4C?</p>\n                ${this.createStartScreen()}\n                ${this.createQuestionScreen()}\n                ${this.createResultScreen()}\n            </div>\n        `;\n    }\n\n    showScreen(screenId) {\n        const screens = this.container.querySelectorAll('.aimbti-screen');\n        screens.forEach(screen => screen.classList.remove('active'));\n\n        const targetScreen = this.container.querySelector(`#${screenId}`);\n        if (targetScreen) {\n            targetScreen.classList.add('active');\n        }\n    }\n\n    updateProgress(current, total) {\n        const progressBar = this.container.querySelector('#aimbti-progress-bar');\n        const progress = ((current + 1) / total) * 100;\n        progressBar.style.width = progress + '%';\n    }\n\n    renderQuestion(question) {\n        const questionText = this.container.querySelector('#aimbti-question-text');\n        const optionsContainer = this.container.querySelector('#aimbti-options');\n\n        questionText.textContent = question.question;\n        optionsContainer.innerHTML = '';\n\n        question.options.forEach((option, index) => {\n            const optionDiv = document.createElement('div');\n            optionDiv.className = 'aimbti-option';\n            optionDiv.textContent = option.text;\n            optionDiv.dataset.index = index;\n            optionDiv.dataset.type = option.type;\n            optionsContainer.appendChild(optionDiv);\n        });\n    }\n\n    renderResult(mbtiType, result) {\n        this.container.querySelector('#aimbti-result-type').textContent = mbtiType;\n        this.container.querySelector('#aimbti-result-title').textContent = result.title;\n        this.container.querySelector('#aimbti-result-description').textContent = result.description;\n\n        const charList = this.container.querySelector('#aimbti-characteristics-list');\n        charList.innerHTML = '';\n        result.characteristics.forEach(char => {\n            const li = document.createElement('li');\n            li.textContent = char;\n            charList.appendChild(li);\n        });\n    }\n}\n", "// MBTI Questions Service\nexport const questions = [\n    // E vs I (\uC678\uD5A5 vs \uB0B4\uD5A5)\n    {\n        question: \"\uCE5C\uAD6C\uB4E4\uACFC \uB9CC\uB0A8 \uD6C4 \uB098\uB294?\",\n        options: [\n            { text: \"\uC5D0\uB108\uC9C0\uAC00 \uCDA9\uC804\uB41C\uB2E4! \uB354 \uB180\uACE0 \uC2F6\uB2E4\", type: \"E\" },\n            { text: \"\uC5D0\uB108\uC9C0\uAC00 \uC18C\uC9C4\uB41C\uB2E4. \uD63C\uC790 \uC26C\uACE0 \uC2F6\uB2E4\", type: \"I\" }\n        ]\n    },\n    {\n        question: \"\uC0C8\uB85C\uC6B4 \uC0AC\uB78C\uB4E4\uC744 \uB9CC\uB0A0 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uBA3C\uC800 \uB2E4\uAC00\uAC00\uC11C \uB9D0\uC744 \uAC74\uB2E4\", type: \"E\" },\n            { text: \"\uC0C1\uB300\uBC29\uC774 \uBA3C\uC800 \uB9D0\uC744 \uAC78\uAE30\uB97C \uAE30\uB2E4\uB9B0\uB2E4\", type: \"I\" }\n        ]\n    },\n    {\n        question: \"\uC8FC\uB9D0\uC5D0 \uB098\uB294?\",\n        options: [\n            { text: \"\uCE5C\uAD6C\uB4E4\uACFC \uC57D\uC18D\uC744 \uC7A1\uACE0 \uBC16\uC5D0\uC11C \uB17C\uB2E4\", type: \"E\" },\n            { text: \"\uC9D1\uC5D0\uC11C \uD63C\uC790\uB9CC\uC758 \uC2DC\uAC04\uC744 \uBCF4\uB0B8\uB2E4\", type: \"I\" }\n        ]\n    },\n    // S vs N (\uAC10\uAC01 vs \uC9C1\uAD00)\n    {\n        question: \"\uBB38\uC81C\uB97C \uD574\uACB0\uD560 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uD604\uC7AC\uC758 \uC0AC\uC2E4\uACFC \uACBD\uD5D8\uC744 \uBC14\uD0D5\uC73C\uB85C \uD310\uB2E8\uD55C\uB2E4\", type: \"S\" },\n            { text: \"\uAC00\uB2A5\uC131\uACFC \uBBF8\uB798\uB97C \uC0C1\uC0C1\uD558\uBA70 \uD310\uB2E8\uD55C\uB2E4\", type: \"N\" }\n        ]\n    },\n    {\n        question: \"\uB300\uD654\uD560 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uAD6C\uCCB4\uC801\uC774\uACE0 \uC2E4\uC9C8\uC801\uC778 \uC774\uC57C\uAE30\uB97C \uC120\uD638\uD55C\uB2E4\", type: \"S\" },\n            { text: \"\uCD94\uC0C1\uC801\uC774\uACE0 \uAC1C\uB150\uC801\uC778 \uC774\uC57C\uAE30\uB97C \uC120\uD638\uD55C\uB2E4\", type: \"N\" }\n        ]\n    },\n    {\n        question: \"\uC0C8\uB85C\uC6B4 \uAC83\uC744 \uBC30\uC6B8 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uB2E8\uACC4\uBCC4\uB85C \uCC28\uADFC\uCC28\uADFC \uBC30\uC6B0\uB294 \uAC83\uC744 \uC120\uD638\uD55C\uB2E4\", type: \"S\" },\n            { text: \"\uC804\uCCB4\uC801\uC778 \uADF8\uB9BC\uC744 \uBA3C\uC800 \uC774\uD574\uD558\uB824 \uD55C\uB2E4\", type: \"N\" }\n        ]\n    },\n    // T vs F (\uC0AC\uACE0 vs \uAC10\uC815)\n    {\n        question: \"\uCE5C\uAD6C\uAC00 \uACE0\uBBFC\uC744 \uD138\uC5B4\uB193\uC744 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uD574\uACB0 \uBC29\uBC95\uC744 \uB17C\uB9AC\uC801\uC73C\uB85C \uC81C\uC2DC\uD55C\uB2E4\", type: \"T\" },\n            { text: \"\uACF5\uAC10\uD558\uACE0 \uC704\uB85C\uD574\uC900\uB2E4\", type: \"F\" }\n        ]\n    },\n    {\n        question: \"\uACB0\uC815\uC744 \uB0B4\uB9B4 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uAC1D\uAD00\uC801\uC774\uACE0 \uB17C\uB9AC\uC801\uC778 \uADFC\uAC70\uB97C \uC911\uC2DC\uD55C\uB2E4\", type: \"T\" },\n            { text: \"\uB098\uC640 \uD0C0\uC778\uC758 \uAC10\uC815\uC744 \uC911\uC2DC\uD55C\uB2E4\", type: \"F\" }\n        ]\n    },\n    {\n        question: \"\uBE44\uD310\uC744 \uBC1B\uC744 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uAC1C\uC120\uC810\uC73C\uB85C \uBC1B\uC544\uB4E4\uC774\uACE0 \uBD84\uC11D\uD55C\uB2E4\", type: \"T\" },\n            { text: \"\uAC10\uC815\uC801\uC73C\uB85C \uC0C1\uCC98\uBC1B\uB294\uB2E4\", type: \"F\" }\n        ]\n    },\n    // J vs P (\uD310\uB2E8 vs \uC778\uC2DD)\n    {\n        question: \"\uC5EC\uD589\uC744 \uACC4\uD68D\uD560 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uC77C\uC815\uACFC \uACC4\uD68D\uC744 \uBBF8\uB9AC \uC138\uC6B4\uB2E4\", type: \"J\" },\n            { text: \"\uC989\uD765\uC801\uC73C\uB85C \uAC00\uACE0 \uC2F6\uC740 \uACF3\uC5D0 \uAC04\uB2E4\", type: \"P\" }\n        ]\n    },\n    {\n        question: \"\uC77C\uC744 \uC9C4\uD589\uD560 \uB54C \uB098\uB294?\",\n        options: [\n            { text: \"\uBBF8\uB9AC\uBBF8\uB9AC \uACC4\uD68D\uC801\uC73C\uB85C \uB05D\uB0B8\uB2E4\", type: \"J\" },\n            { text: \"\uB9C8\uAC10 \uC9C1\uC804\uC5D0 \uBAB0\uC544\uC11C \uD55C\uB2E4\", type: \"P\" }\n        ]\n    },\n    {\n        question: \"\uB0B4 \uBC29 \uC0C1\uD0DC\uB294?\",\n        options: [\n            { text: \"\uD56D\uC0C1 \uC815\uB9AC\uC815\uB3C8\uC774 \uB418\uC5B4 \uC788\uB2E4\", type: \"J\" },\n            { text: \"\uD544\uC694\uD55C \uAC83\uB9CC \uB300\uCDA9 \uC815\uB9AC\uD55C\uB2E4\", type: \"P\" }\n        ]\n    }\n];\n\nexport class QuestionService {\n    constructor() {\n        this.questions = questions;\n    }\n\n    getQuestions() {\n        return this.questions;\n    }\n\n    getQuestion(index) {\n        return this.questions[index];\n    }\n\n    getTotalQuestions() {\n        return this.questions.length;\n    }\n}\n", "// MBTI Results Service\nexport const mbtiResults = {\n    \"ISTJ\": {\n        title: \"\uC138\uC0C1\uC758 \uC18C\uAE08\uD615\",\n        description: \"\uD55C\uBC88 \uC2DC\uC791\uD55C \uC77C\uC740 \uB05D\uAE4C\uC9C0 \uD574\uB0B4\uB294 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uCC45\uC784\uAC10\uC774 \uAC15\uD558\uACE0 \uCCA0\uC800\uD558\uBA70, \uC2E0\uB8B0\uD560 \uC218 \uC788\uB294 \uC131\uACA9\uC785\uB2C8\uB2E4.\",\n        characteristics: [\"\uCCB4\uACC4\uC801\uC774\uACE0 \uC870\uC9C1\uC801\", \"\uCC45\uC784\uAC10\uC774 \uAC15\uD568\", \"\uD604\uC2E4\uC801\uC774\uACE0 \uC2E4\uC6A9\uC801\", \"\uC804\uD1B5\uACFC \uADDC\uCE59\uC744 \uC911\uC2DC\", \"\uC2E0\uB8B0\uC131\uC774 \uB192\uC74C\"]\n    },\n    \"ISFJ\": {\n        title: \"\uC784\uAE08 \uB4A4\uD3B8\uC758 \uAD8C\uB825\uD615\",\n        description: \"\uB530\uB73B\uD558\uACE0 \uD5CC\uC2E0\uC801\uC778 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uB2E4\uB978 \uC0AC\uB78C\uC744 \uB3D5\uB294 \uAC83\uC5D0 \uBCF4\uB78C\uC744 \uB290\uB07C\uBA70, \uC870\uD654\uB85C\uC6B4 \uD658\uACBD\uC744 \uB9CC\uB4ED\uB2C8\uB2E4.\",\n        characteristics: [\"\uCE5C\uC808\uD558\uACE0 \uBC30\uB824\uC2EC\uC774 \uB9CE\uC74C\", \"\uCC45\uC784\uAC10\uC774 \uAC15\uD568\", \"\uC778\uB0B4\uC2EC\uC774 \uC788\uC74C\", \"\uC138\uC2EC\uD558\uACE0 \uAF3C\uAF3C\uD568\", \"\uD5CC\uC2E0\uC801\uC774\uACE0 \uCDA9\uC131\uC2A4\uB7EC\uC6C0\"]\n    },\n    \"INFJ\": {\n        title: \"\uC608\uC5B8\uC790\uD615\",\n        description: \"\uAE4A\uC740 \uD1B5\uCC30\uB825\uC744 \uAC00\uC9C4 \uC774\uC0C1\uC8FC\uC758\uC790\uC785\uB2C8\uB2E4. \uD0C0\uC778\uC744 \uC774\uD574\uD558\uACE0 \uB3D5\uB294 \uAC83\uC5D0 \uC5F4\uC815\uC801\uC774\uBA70, \uC758\uBBF8 \uC788\uB294 \uAD00\uACC4\uB97C \uCD94\uAD6C\uD569\uB2C8\uB2E4.\",\n        characteristics: [\"\uD1B5\uCC30\uB825\uC774 \uB6F0\uC5B4\uB0A8\", \"\uC774\uC0C1\uC8FC\uC758\uC801\", \"\uCC3D\uC758\uC801\uC774\uACE0 \uB3C5\uCC3D\uC801\", \"\uD0C0\uC778\uC5D0 \uB300\uD55C \uAE4A\uC740 \uC774\uD574\", \"\uC644\uBCBD\uC8FC\uC758 \uC131\uD5A5\"]\n    },\n    \"INTJ\": {\n        title: \"\uACFC\uD559\uC790\uD615\",\n        description: \"\uC804\uB7B5\uC801\uC774\uACE0 \uB17C\uB9AC\uC801\uC778 \uC0AC\uACE0\uB97C \uD558\uB294 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uB3C5\uB9BD\uC801\uC774\uACE0 \uBD84\uC11D\uC801\uC774\uBA70, \uC7A5\uAE30\uC801\uC778 \uBE44\uC804\uC744 \uAC00\uC9C0\uACE0 \uC788\uC2B5\uB2C8\uB2E4.\",\n        characteristics: [\"\uC804\uB7B5\uC801 \uC0AC\uACE0\", \"\uB3C5\uB9BD\uC801\uC774\uACE0 \uC790\uC728\uC801\", \"\uB17C\uB9AC\uC801\uC774\uACE0 \uBD84\uC11D\uC801\", \"\uBAA9\uD45C \uC9C0\uD5A5\uC801\", \"\uB192\uC740 \uAE30\uC900\uACFC \uC644\uBCBD\uC8FC\uC758\"]\n    },\n    \"ISTP\": {\n        title: \"\uBC31\uACFC\uC0AC\uC804\uD615\",\n        description: \"\uB17C\uB9AC\uC801\uC774\uACE0 \uC2E4\uC6A9\uC801\uC778 \uBB38\uC81C \uD574\uACB0\uC0AC\uC785\uB2C8\uB2E4. \uC190\uC7AC\uC8FC\uAC00 \uC88B\uACE0, \uC989\uD765\uC801\uC73C\uB85C \uC0C1\uD669\uC5D0 \uB300\uCC98\uD558\uB294 \uB2A5\uB825\uC774 \uB6F0\uC5B4\uB0A9\uB2C8\uB2E4.\",\n        characteristics: [\"\uC2E4\uC6A9\uC801\uC774\uACE0 \uD604\uC2E4\uC801\", \"\uB17C\uB9AC\uC801 \uBD84\uC11D \uB2A5\uB825\", \"\uC190\uC7AC\uC8FC\uAC00 \uB6F0\uC5B4\uB0A8\", \"\uC801\uC751\uB825\uC774 \uB192\uC74C\", \"\uB3C5\uB9BD\uC801\uC774\uACE0 \uC790\uC720\uB85C\uC6C0\"]\n    },\n    \"ISFP\": {\n        title: \"\uC131\uC778\uAD70\uC790\uD615\",\n        description: \"\uC628\uD654\uD558\uACE0 \uCE5C\uC808\uD55C \uC608\uC220\uAC00 \uAE30\uC9C8\uC744 \uAC00\uC9C4 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uD604\uC7AC\uB97C \uC990\uAE30\uBA70, \uC870\uD654\uB85C\uC6B4 \uD658\uACBD\uC744 \uC120\uD638\uD569\uB2C8\uB2E4.\",\n        characteristics: [\"\uCE5C\uC808\uD558\uACE0 \uC628\uD654\uD568\", \"\uC608\uC220\uC801 \uAC10\uAC01\", \"\uAC1C\uBC29\uC801\uC774\uACE0 \uC720\uC5F0\uD568\", \"\uD604\uC7AC \uC911\uC2EC\uC801\", \"\uD3C9\uD654\uB97C \uCD94\uAD6C\uD568\"]\n    },\n    \"INFP\": {\n        title: \"\uC794\uB2E4\uB974\uD06C\uD615\",\n        description: \"\uC774\uC0C1\uC8FC\uC758\uC801\uC774\uACE0 \uCDA9\uC131\uC2A4\uB7EC\uC6B4 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uC790\uC2E0\uC758 \uAC00\uCE58\uAD00\uC744 \uC911\uC2DC\uD558\uBA70, \uC758\uBBF8 \uC788\uB294 \uC0B6\uC744 \uCD94\uAD6C\uD569\uB2C8\uB2E4.\",\n        characteristics: [\"\uC774\uC0C1\uC8FC\uC758\uC801\", \"\uCC3D\uC758\uC801\uC774\uACE0 \uC0C1\uC0C1\uB825\uC774 \uD48D\uBD80\", \"\uAC00\uCE58\uAD00\uC774 \uB69C\uB837\uD568\", \"\uACF5\uAC10 \uB2A5\uB825\uC774 \uB6F0\uC5B4\uB0A8\", \"\uAC1C\uC778\uC758 \uC131\uC7A5\uC744 \uC911\uC2DC\"]\n    },\n    \"INTP\": {\n        title: \"\uC544\uC774\uB514\uC5B4 \uBC45\uD06C\uD615\",\n        description: \"\uB17C\uB9AC\uC801\uC774\uACE0 \uBD84\uC11D\uC801\uC778 \uC0AC\uC0C9\uAC00\uC785\uB2C8\uB2E4. \uC9C0\uC801 \uD638\uAE30\uC2EC\uC774 \uB9CE\uACE0, \uC774\uB860\uACFC \uC544\uC774\uB514\uC5B4\uC5D0 \uAD00\uC2EC\uC774 \uB9CE\uC2B5\uB2C8\uB2E4.\",\n        characteristics: [\"\uB17C\uB9AC\uC801\uC774\uACE0 \uBD84\uC11D\uC801\", \"\uD638\uAE30\uC2EC\uC774 \uB9CE\uC74C\", \"\uB3C5\uCC3D\uC801\uC778 \uC544\uC774\uB514\uC5B4\", \"\uAC1D\uAD00\uC801\uC774\uACE0 \uACF5\uC815\uD568\", \"\uC9C0\uC2DD \uCD94\uAD6C\"]\n    },\n    \"ESTP\": {\n        title: \"\uC218\uC644 \uC88B\uC740 \uD65C\uB3D9\uAC00\uD615\",\n        description: \"\uD65C\uB3D9\uC801\uC774\uACE0 \uD604\uC2E4\uC801\uC778 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uC21C\uAC04\uC744 \uC990\uAE30\uBA70, \uC704\uAE30 \uC0C1\uD669\uC5D0\uC11C \uBE60\uB974\uAC8C \uB300\uCC98\uD569\uB2C8\uB2E4.\",\n        characteristics: [\"\uD65C\uB3D9\uC801\uC774\uACE0 \uC5D0\uB108\uC9C0 \uB118\uCE68\", \"\uD604\uC2E4\uC801\uC774\uACE0 \uC2E4\uC6A9\uC801\", \"\uC801\uC751\uB825\uC774 \uB6F0\uC5B4\uB0A8\", \"\uC21C\uBC1C\uB825\uC774 \uC88B\uC74C\", \"\uC0AC\uAD50\uC801\uC774\uACE0 \uCE5C\uADFC\uD568\"]\n    },\n    \"ESFP\": {\n        title: \"\uC0AC\uAD50\uC801\uC778 \uC720\uD615\",\n        description: \"\uC0AC\uB78C\uB4E4\uACFC \uC5B4\uC6B8\uB9AC\uB294 \uAC83\uC744 \uC88B\uC544\uD558\uB294 \uC790\uC720\uB85C\uC6B4 \uC601\uD63C\uC785\uB2C8\uB2E4. \uC990\uAC70\uC6C0\uC744 \uCD94\uAD6C\uD558\uBA70, \uBD84\uC704\uAE30 \uBA54\uC774\uCEE4 \uC5ED\uD560\uC744 \uD569\uB2C8\uB2E4.\",\n        characteristics: [\"\uC0AC\uAD50\uC801\uC774\uACE0 \uCE5C\uADFC\uD568\", \"\uB099\uCC9C\uC801\uC774\uACE0 \uAE0D\uC815\uC801\", \"\uC989\uD765\uC801\uC774\uACE0 \uC720\uC5F0\uD568\", \"\uD0C0\uC778\uC5D0 \uB300\uD55C \uAD00\uC2EC\", \"\uD604\uC7AC\uB97C \uC990\uAE40\"]\n    },\n    \"ENFP\": {\n        title: \"\uC2A4\uD30C\uD06C\uD615\",\n        description: \"\uC5F4\uC815\uC801\uC774\uACE0 \uCC3D\uC758\uC801\uC778 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uC0C8\uB85C\uC6B4 \uAC00\uB2A5\uC131\uC5D0 \uC5F4\uB824 \uC788\uC73C\uBA70, \uC0AC\uB78C\uB4E4\uC5D0\uAC8C \uC601\uAC10\uC744 \uC90D\uB2C8\uB2E4.\",\n        characteristics: [\"\uC5F4\uC815\uC801\uC774\uACE0 \uD65C\uAE30\uD568\", \"\uCC3D\uC758\uC801\uC774\uACE0 \uC0C1\uC0C1\uB825 \uD48D\uBD80\", \"\uC0AC\uAD50\uC801\uC774\uACE0 \uCE5C\uADFC\uD568\", \"\uAC00\uB2A5\uC131\uC744 \uCD94\uAD6C\", \"\uD638\uAE30\uC2EC\uC774 \uB9CE\uC74C\"]\n    },\n    \"ENTP\": {\n        title: \"\uBC1C\uBA85\uAC00\uD615\",\n        description: \"\uD601\uC2E0\uC801\uC774\uACE0 \uB3C4\uC804\uC801\uC778 \uC0AC\uACE0\uB97C \uD558\uB294 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uC0C8\uB85C\uC6B4 \uC544\uC774\uB514\uC5B4\uC640 \uAC00\uB2A5\uC131\uC744 \uD0D0\uAD6C\uD558\uB294 \uAC83\uC744 \uC990\uAE41\uB2C8\uB2E4.\",\n        characteristics: [\"\uD601\uC2E0\uC801\uC774\uACE0 \uCC3D\uC758\uC801\", \"\uB17C\uB9AC\uC801\uC774\uACE0 \uBD84\uC11D\uC801\", \"\uB3C4\uC804\uC744 \uC990\uAE40\", \"\uC9C0\uC801 \uD638\uAE30\uC2EC\", \"\uC124\uB4DD\uB825\uC774 \uC788\uC74C\"]\n    },\n    \"ESTJ\": {\n        title: \"\uC0AC\uC5C5\uAC00\uD615\",\n        description: \"\uCCB4\uACC4\uC801\uC774\uACE0 \uC2E4\uC6A9\uC801\uC778 \uB9AC\uB354\uC785\uB2C8\uB2E4. \uD6A8\uC728\uC131\uC744 \uC911\uC2DC\uD558\uBA70, \uC870\uC9C1\uC744 \uC798 \uAD00\uB9AC\uD558\uB294 \uB2A5\uB825\uC774 \uC788\uC2B5\uB2C8\uB2E4.\",\n        characteristics: [\"\uC870\uC9C1\uC801\uC774\uACE0 \uCCB4\uACC4\uC801\", \"\uACB0\uB2E8\uB825\uC774 \uC788\uC74C\", \"\uCC45\uC784\uAC10\uC774 \uAC15\uD568\", \"\uD6A8\uC728\uC131 \uCD94\uAD6C\", \"\uD604\uC2E4\uC801\uC774\uACE0 \uC2E4\uC6A9\uC801\"]\n    },\n    \"ESFJ\": {\n        title: \"\uCE5C\uC120\uB3C4\uBAA8\uD615\",\n        description: \"\uB530\uB73B\uD558\uACE0 \uD611\uB825\uC801\uC778 \uC0AC\uB78C\uB4E4\uC785\uB2C8\uB2E4. \uD0C0\uC778\uC744 \uB3D5\uB294 \uAC83\uC744 \uC88B\uC544\uD558\uBA70, \uC870\uD654\uB85C\uC6B4 \uAD00\uACC4\uB97C \uB9CC\uB4ED\uB2C8\uB2E4.\",\n        characteristics: [\"\uCE5C\uC808\uD558\uACE0 \uD611\uB825\uC801\", \"\uCC45\uC784\uAC10\uC774 \uAC15\uD568\", \"\uC0AC\uAD50\uC801\uC774\uACE0 \uCE5C\uADFC\uD568\", \"\uC804\uD1B5\uACFC \uC9C8\uC11C \uC911\uC2DC\", \"\uD0C0\uC778 \uBC30\uB824\"]\n    },\n    \"ENFJ\": {\n        title: \"\uC5B8\uBCC0\uB2A5\uC219\uD615\",\n        description: \"\uCE74\uB9AC\uC2A4\uB9C8 \uC788\uB294 \uB9AC\uB354\uC785\uB2C8\uB2E4. \uD0C0\uC778\uC744 \uC774\uD574\uD558\uACE0 \uC601\uAC10\uC744 \uC8FC\uBA70, \uC0AC\uB78C\uB4E4\uC744 \uD558\uB098\uB85C \uBAA8\uC73C\uB294 \uB2A5\uB825\uC774 \uC788\uC2B5\uB2C8\uB2E4.\",\n        characteristics: [\"\uCE74\uB9AC\uC2A4\uB9C8 \uC788\uC74C\", \"\uACF5\uAC10 \uB2A5\uB825\uC774 \uB6F0\uC5B4\uB0A8\", \"\uC774\uC0C1\uC8FC\uC758\uC801\", \"\uB9AC\uB354\uC2ED\uC774 \uAC15\uD568\", \"\uC124\uB4DD\uB825\uC774 \uC788\uC74C\"]\n    },\n    \"ENTJ\": {\n        title: \"\uC9C0\uB3C4\uC790\uD615\",\n        description: \"\uB300\uB2F4\uD558\uACE0 \uC804\uB7B5\uC801\uC778 \uB9AC\uB354\uC785\uB2C8\uB2E4. \uBAA9\uD45C \uC9C0\uD5A5\uC801\uC774\uBA70, \uD6A8\uC728\uC801\uC73C\uB85C \uC870\uC9C1\uC744 \uC774\uB044\uB294 \uB2A5\uB825\uC774 \uC788\uC2B5\uB2C8\uB2E4.\",\n        characteristics: [\"\uB9AC\uB354\uC2ED\uC774 \uAC15\uD568\", \"\uC804\uB7B5\uC801 \uC0AC\uACE0\", \"\uACB0\uB2E8\uB825\uC774 \uC788\uC74C\", \"\uBAA9\uD45C \uC9C0\uD5A5\uC801\", \"\uD6A8\uC728\uC131 \uCD94\uAD6C\"]\n    }\n};\n\nexport class ResultService {\n    constructor() {\n        this.results = mbtiResults;\n    }\n\n    calculateResult(answers) {\n        const mbtiType =\n            (answers.E >= answers.I ? 'E' : 'I') +\n            (answers.S >= answers.N ? 'S' : 'N') +\n            (answers.T >= answers.F ? 'T' : 'F') +\n            (answers.J >= answers.P ? 'J' : 'P');\n\n        return {\n            type: mbtiType,\n            result: this.results[mbtiType]\n        };\n    }\n\n    getResult(mbtiType) {\n        return this.results[mbtiType];\n    }\n}\n", "// Authentication Service\nexport class AuthService {\n    constructor(apiKey, options = {}) {\n        this.apiKey = apiKey;\n        this.apiUrl = options.apiUrl || '/mock-api/auth.json'; // \uC2E4\uC81C \uC6B4\uC601\uC2DC\uC5D0\uB294 \uC2E4\uC81C API URL\uB85C \uBCC0\uACBD\n        this.useMock = options.useMock !== false; // \uAE30\uBCF8\uAC12\uC740 mock \uC0AC\uC6A9\n        this.authData = null;\n        this.isAuthenticated = false;\n    }\n\n    /**\n     * \uD604\uC7AC \uB3C4\uBA54\uC778 \uAC00\uC838\uC624\uAE30\n     */\n    getCurrentDomain() {\n        if (typeof window === 'undefined') {\n            return 'localhost';\n        }\n\n        let hostname = window.location.hostname;\n\n        // 127.0.0.1\uC744 localhost\uB85C \uBCC0\uD658\n        if (hostname === '127.0.0.1') {\n            hostname = 'localhost';\n        }\n\n        return hostname;\n    }\n\n    /**\n     * API \uD0A4 \uC720\uD6A8\uC131 \uAC80\uC99D\n     */\n    async authenticate() {\n        if (!this.apiKey) {\n            throw new Error('API \uD0A4\uAC00 \uC81C\uACF5\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.');\n        }\n\n        try {\n            const currentDomain = this.getCurrentDomain();\n\n            if (this.useMock) {\n                // Mock API \uC0AC\uC6A9\n                return await this.authenticateWithMock(currentDomain);\n            } else {\n                // \uC2E4\uC81C API \uC0AC\uC6A9\n                return await this.authenticateWithAPI(currentDomain);\n            }\n        } catch (error) {\n            console.error('Authentication error:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Mock API\uB85C \uC778\uC99D (\uAC1C\uBC1C/\uD14C\uC2A4\uD2B8\uC6A9)\n     */\n    async authenticateWithMock(currentDomain) {\n        try {\n            const response = await fetch(this.apiUrl);\n            if (!response.ok) {\n                throw new Error('Mock API\uB97C \uBD88\uB7EC\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.');\n            }\n\n            const data = await response.json();\n\n            // API \uD0A4\uB85C \uCC3E\uAE30\n            const keyData = data.validKeys.find(k => k.apiKey === this.apiKey);\n\n            if (!keyData) {\n                throw new Error(data.errors.invalid_key.message);\n            }\n\n            // \uB3C4\uBA54\uC778 \uAC80\uC99D (* \uB294 \uBAA8\uB4E0 \uB3C4\uBA54\uC778 \uD5C8\uC6A9)\n            if (keyData.domain !== '*' && keyData.domain !== currentDomain) {\n                throw new Error(data.errors.domain_mismatch.message);\n            }\n\n            // \uB9CC\uB8CC\uC77C \uAC80\uC99D\n            const expiresAt = new Date(keyData.expiresAt);\n            if (expiresAt < new Date()) {\n                throw new Error(data.errors.expired_key.message);\n            }\n\n            this.authData = keyData;\n            this.isAuthenticated = true;\n\n            console.log(`\u2713 \uC778\uC99D \uC131\uACF5: ${keyData.name} (${keyData.plan} \uD50C\uB79C)`);\n\n            return {\n                success: true,\n                data: keyData\n            };\n        } catch (error) {\n            this.isAuthenticated = false;\n            throw error;\n        }\n    }\n\n    /**\n     * \uC2E4\uC81C API\uB85C \uC778\uC99D (\uC6B4\uC601\uC6A9)\n     */\n    async authenticateWithAPI(currentDomain) {\n        try {\n            const response = await fetch(this.apiUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    apiKey: this.apiKey,\n                    domain: currentDomain,\n                    timestamp: new Date().toISOString()\n                })\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.message || '\uC778\uC99D\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n            }\n\n            const data = await response.json();\n\n            if (!data.success) {\n                throw new Error(data.message || '\uC778\uC99D\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n            }\n\n            this.authData = data.data;\n            this.isAuthenticated = true;\n\n            return data;\n        } catch (error) {\n            this.isAuthenticated = false;\n            throw error;\n        }\n    }\n\n    /**\n     * \uC778\uC99D \uC0C1\uD0DC \uD655\uC778\n     */\n    isValid() {\n        return this.isAuthenticated && this.authData !== null;\n    }\n\n    /**\n     * \uC778\uC99D \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30\n     */\n    getAuthData() {\n        return this.authData;\n    }\n\n    /**\n     * \uAE30\uB2A5 \uC0AC\uC6A9 \uAC00\uB2A5 \uC5EC\uBD80 \uD655\uC778\n     */\n    hasFeature(featureName) {\n        if (!this.isValid()) {\n            return false;\n        }\n        return this.authData.features && this.authData.features[featureName] === true;\n    }\n\n    /**\n     * \uC0AC\uC6A9 \uD55C\uB3C4 \uD655\uC778\n     */\n    canUseService() {\n        if (!this.isValid()) {\n            return false;\n        }\n\n        // maxTests\uAC00 -1\uC774\uBA74 \uBB34\uC81C\uD55C\n        if (this.authData.features.maxTests === -1) {\n            return true;\n        }\n\n        // \uC2E4\uC81C \uC6B4\uC601\uC2DC\uC5D0\uB294 \uC11C\uBC84\uC5D0\uC11C \uC0AC\uC6A9 \uD69F\uC218\uB97C \uCCB4\uD06C\uD574\uC57C \uD568\n        return true;\n    }\n}\n", "// User Session Service\nexport class SessionService {\n    constructor(apiKey, userToken, options = {}) {\n        this.apiKey = apiKey;\n        this.userToken = userToken;\n        this.userId = options.userId || null;\n        this.apiUrl = options.apiUrl || '/mock-api';\n        this.useMock = options.useMock !== false;\n        this.sessionId = null;\n        this.sessionData = null;\n    }\n\n    /**\n     * \uD14C\uC2A4\uD2B8 \uC138\uC158 \uC2DC\uC791\n     */\n    async startSession() {\n        if (!this.apiKey || !this.userToken) {\n            throw new Error('API \uD0A4\uC640 \uC0AC\uC6A9\uC790 \uD1A0\uD070\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.');\n        }\n\n        try {\n            if (this.useMock) {\n                return await this.startSessionWithMock();\n            } else {\n                return await this.startSessionWithAPI();\n            }\n        } catch (error) {\n            console.error('Session start error:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Mock API\uB85C \uC138\uC158 \uC2DC\uC791\n     */\n    async startSessionWithMock() {\n        // Mock \uB370\uC774\uD130 \uC0DD\uC131\n        this.sessionId = this.generateSessionId();\n        this.sessionData = {\n            sessionId: this.sessionId,\n            userId: this.userId,\n            userToken: this.userToken,\n            apiKey: this.apiKey,\n            startedAt: new Date().toISOString(),\n            expiresAt: new Date(Date.now() + 3600000).toISOString() // 1\uC2DC\uAC04 \uD6C4\n        };\n\n        console.log('\u2713 \uD14C\uC2A4\uD2B8 \uC138\uC158 \uC2DC\uC791:', this.sessionId);\n\n        return {\n            success: true,\n            data: this.sessionData\n        };\n    }\n\n    /**\n     * \uC2E4\uC81C API\uB85C \uC138\uC158 \uC2DC\uC791\n     */\n    async startSessionWithAPI() {\n        const response = await fetch(`${this.apiUrl}/test/start`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                apiKey: this.apiKey,\n                userToken: this.userToken,\n                userId: this.userId,\n                timestamp: new Date().toISOString()\n            })\n        });\n\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.message || '\uC138\uC158 \uC2DC\uC791\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n        }\n\n        const data = await response.json();\n        this.sessionId = data.sessionId;\n        this.sessionData = data;\n\n        return data;\n    }\n\n    /**\n     * \uC138\uC158 ID \uC0DD\uC131\n     */\n    generateSessionId() {\n        return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    /**\n     * \uC138\uC158 \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30\n     */\n    getSessionData() {\n        return this.sessionData;\n    }\n\n    /**\n     * \uC138\uC158 ID \uAC00\uC838\uC624\uAE30\n     */\n    getSessionId() {\n        return this.sessionId;\n    }\n\n    /**\n     * \uC138\uC158 \uC720\uD6A8\uC131 \uD655\uC778\n     */\n    isValid() {\n        if (!this.sessionData) {\n            return false;\n        }\n\n        const expiresAt = new Date(this.sessionData.expiresAt);\n        return expiresAt > new Date();\n    }\n}\n", "// Result Storage Service\nexport class StorageService {\n    constructor(apiKey, options = {}) {\n        this.apiKey = apiKey;\n        this.apiUrl = options.apiUrl || '/mock-api';\n        this.useMock = options.useMock !== false;\n    }\n\n    /**\n     * \uD14C\uC2A4\uD2B8 \uACB0\uACFC \uC800\uC7A5\n     */\n    async saveResult(sessionId, userToken, result, answers) {\n        if (!sessionId || !userToken) {\n            throw new Error('\uC138\uC158 ID\uC640 \uC0AC\uC6A9\uC790 \uD1A0\uD070\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.');\n        }\n\n        const resultData = {\n            sessionId,\n            userToken,\n            apiKey: this.apiKey,\n            mbtiType: result.type,\n            result: result.result,\n            answers,\n            completedAt: new Date().toISOString(),\n            ipAddress: this.getClientIP(),\n            userAgent: navigator.userAgent\n        };\n\n        try {\n            if (this.useMock) {\n                return await this.saveResultWithMock(resultData);\n            } else {\n                return await this.saveResultWithAPI(resultData);\n            }\n        } catch (error) {\n            console.error('Result save error:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Mock\uC73C\uB85C \uACB0\uACFC \uC800\uC7A5\n     */\n    async saveResultWithMock(resultData) {\n        // Mock \uC800\uC7A5 (\uC2E4\uC81C\uB85C\uB294 \uC800\uC7A5\uB418\uC9C0 \uC54A\uC74C)\n        const resultId = this.generateResultId();\n\n        // \uB85C\uCEEC\uC2A4\uD1A0\uB9AC\uC9C0\uC5D0 \uC800\uC7A5 (\uD14C\uC2A4\uD2B8\uC6A9)\n        const savedResults = this.getSavedResults();\n        savedResults.push({\n            resultId,\n            ...resultData,\n            savedAt: new Date().toISOString()\n        });\n        localStorage.setItem('aimbti_results', JSON.stringify(savedResults));\n\n        console.log('\u2713 \uD14C\uC2A4\uD2B8 \uACB0\uACFC \uC800\uC7A5:', resultId);\n\n        return {\n            success: true,\n            data: {\n                resultId,\n                savedAt: new Date().toISOString(),\n                shareUrl: `https://aimbti.com/result/${resultId}`\n            }\n        };\n    }\n\n    /**\n     * \uC2E4\uC81C API\uB85C \uACB0\uACFC \uC800\uC7A5\n     */\n    async saveResultWithAPI(resultData) {\n        const response = await fetch(`${this.apiUrl}/test/submit`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(resultData)\n        });\n\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.message || '\uACB0\uACFC \uC800\uC7A5\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n        }\n\n        const data = await response.json();\n        return data;\n    }\n\n    /**\n     * \uC0AC\uC6A9\uC790\uC758 \uD14C\uC2A4\uD2B8 \uD788\uC2A4\uD1A0\uB9AC \uC870\uD68C\n     */\n    async getHistory(userToken, limit = 10) {\n        if (!userToken) {\n            throw new Error('\uC0AC\uC6A9\uC790 \uD1A0\uD070\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.');\n        }\n\n        try {\n            if (this.useMock) {\n                return await this.getHistoryWithMock(userToken, limit);\n            } else {\n                return await this.getHistoryWithAPI(userToken, limit);\n            }\n        } catch (error) {\n            console.error('History fetch error:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Mock\uC73C\uB85C \uD788\uC2A4\uD1A0\uB9AC \uC870\uD68C\n     */\n    async getHistoryWithMock(userToken, limit) {\n        const savedResults = this.getSavedResults();\n        const userResults = savedResults\n            .filter(r => r.userToken === userToken)\n            .slice(0, limit);\n\n        return {\n            success: true,\n            data: {\n                results: userResults,\n                total: userResults.length\n            }\n        };\n    }\n\n    /**\n     * \uC2E4\uC81C API\uB85C \uD788\uC2A4\uD1A0\uB9AC \uC870\uD68C\n     */\n    async getHistoryWithAPI(userToken, limit) {\n        const response = await fetch(\n            `${this.apiUrl}/test/history?userToken=${userToken}&limit=${limit}`,\n            {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            }\n        );\n\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.message || '\uD788\uC2A4\uD1A0\uB9AC \uC870\uD68C\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.');\n        }\n\n        const data = await response.json();\n        return data;\n    }\n\n    /**\n     * \uB85C\uCEEC\uC2A4\uD1A0\uB9AC\uC9C0\uC5D0\uC11C \uC800\uC7A5\uB41C \uACB0\uACFC \uAC00\uC838\uC624\uAE30\n     */\n    getSavedResults() {\n        const saved = localStorage.getItem('aimbti_results');\n        return saved ? JSON.parse(saved) : [];\n    }\n\n    /**\n     * \uACB0\uACFC ID \uC0DD\uC131\n     */\n    generateResultId() {\n        return 'result_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    /**\n     * \uD074\uB77C\uC774\uC5B8\uD2B8 IP \uAC00\uC838\uC624\uAE30 (\uADFC\uC0AC\uCE58)\n     */\n    getClientIP() {\n        // \uC2E4\uC81C\uB85C\uB294 \uC11C\uBC84\uC5D0\uC11C \uCC98\uB9AC\uD574\uC57C \uD568\n        return 'client';\n    }\n}\n"],
  "mappings": "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",
  "names": ["aimbti_exports", "__export", "AIMBTI", "styles", "UIComponents", "container", "screenId", "screen", "targetScreen", "current", "total", "progressBar", "progress", "question", "questionText", "optionsContainer", "option", "index", "optionDiv", "mbtiType", "result", "charList", "char", "li", "questions", "QuestionService", "index", "mbtiResults", "ResultService", "answers", "mbtiType", "AuthService", "apiKey", "options", "hostname", "currentDomain", "error", "response", "data", "keyData", "k", "featureName", "SessionService", "apiKey", "userToken", "options", "error", "response", "data", "StorageService", "apiKey", "options", "sessionId", "userToken", "result", "answers", "resultData", "error", "resultId", "savedResults", "response", "limit", "userResults", "r", "saved", "AIMBTI", "containerId", "options", "QuestionService", "ResultService", "AuthService", "error", "SessionService", "StorageService", "UIComponents", "styleId", "styleElement", "styles", "question", "option", "e", "optionElement", "opt", "type", "result", "sessionId", "saveResponse", "title", "message", "container", "app"]
}
